# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
/doks

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws
.idea/

# VS Code
.vscode/

# Security and sensitive files
*.key
*.pem
*.p12
*.pfx
*.crt
*.csr
*.p8
*.pcap
*.pcapng
*.log
secrets.json
config.json
.env.local
.env.production
.env.staging
.pypirc

# Test files
test_*.py
*_test.py
tests/
test/

# Documentation build
docs/build/
docs/source/_build/

# Coverage reports
coverage.xml
coverage.json
htmlcov/
.coverage

# Bandit security reports
bandit-report.json
bandit-report.html

# Safety security reports
safety-report.json
safety-report.html

# Pre-commit cache
.pre-commit-cache/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# Backup files
*.bak
*.backup
*.old

# Logs
logs/
*.log

# Database files
*.db
*.sqlite
*.sqlite3

# Cache directories
.cache/
.pytest_cache/
.mypy_cache/

# Jupyter notebooks
*.ipynb

# Local development
local_settings.py
settings_local.py

# Docker
.dockerignore
Dockerfile.dev
docker-compose.override.yml

# Terraform
*.tfstate
*.tfstate.*
.terraform/

# Kubernetes
*.kubeconfig

# IDE specific
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# OS specific
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.lnk

# Linux
*~

# macOS
.AppleDouble
.LSOverride

# Security tools output
nmap-output.xml
nmap-output.txt
*.nse
*.lua

# LogicPwn specific
logicpwn.log
logicpwn_debug.log
session_data.json
auth_tokens.json
target_data.json
exploit_results.json
vulnerability_reports/
security_scan_results/
penetration_test_reports/

# Test artifacts
test_results/
test_output/
test_reports/
test_coverage/

# Performance profiling
*.prof
*.profile
*.pstats

# Memory dumps
*.dump
*.dmp

# Core dumps
core.*

# Temporary directories
tmp/
temp/
.tmp/
.temp/ 