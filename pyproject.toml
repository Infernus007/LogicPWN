[tool.poetry]
name = "logicpwn"
version = "0.2.2"
description = "LogicPwn represents a paradigm shift from traditional security testing toward intelligent, business-aware security automation. Its unique focus on business logic vulnerabilities, combined with enterprise-grade performance and comprehensive documentation, positions it as a leader in the next generation of security testing tools."
authors = ["Jash Naik <jashnaik2004@gmail.com>"]
readme = "README.md"
packages = [{include = "logicpwn"}]

[tool.poetry.dependencies]
python = "^3.9"
requests = "^2.31.0"
pydantic = "^2.5.0"
loguru = "^0.7.2"
aiohttp = "^3.9.0"
psutil = "^5.9.0"
sphinx = "^7.2.0"
sphinx-rtd-theme = "^3.0.2"
sphinx-autodoc-typehints = "^1.22.0"
pytest-asyncio = "<1.0"
tenacity = "^9.1.2"
jsonpath-ng = "^1.7.0"
# Enhanced auth dependencies
cryptography = "^42.0.0"
qrcode = {extras = ["pil"], version = "^7.4.2"}
# Optional dependencies for providers
twilio = {version = "^9.0.0", optional = true}
boto3 = {version = "^1.34.0", optional = true}
sendgrid = {version = "^6.11.0", optional = true}
pyyaml = "^6.0.2"

[tool.poetry.extras]
sms = ["twilio", "boto3"]
email = ["sendgrid"]
providers = ["twilio", "boto3", "sendgrid"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
twine = "^6.1.0"
sphinx = "^7.2.0"
sphinx-rtd-theme = "^3.0.2"
sphinx-autodoc-typehints = "^1.22.0"
pre-commit = "^4.3.0"
# Code quality tools
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.3.0"
autoflake = "^2.3.1"
bandit = "^1.8.6"
# Flake8 extensions
flake8-import-order = "^0.19.2"
flake8-docstrings = "^1.7.0"
flake8-bugbear = "^24.2.6"
flake8-comprehensions = "^3.15.0"
flake8-simplify = "^0.22.0"

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | doks
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["logicpwn", "tests", "examples"]

[tool.autoflake]
remove-all-unused-imports = true
remove-unused-variables = true
remove-duplicate-keys = true
ignore-init-module-imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["logicpwn"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
